{"ast":null,"code":"class SaturnIntegration {\n  init(user) {\n    var _window2, _window3, _window3$$saturn;\n    if (!user) {\n      var _window, _window$$saturn, _window$$saturn$reset;\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      (_window = window) === null || _window === void 0 ? void 0 : (_window$$saturn = _window.$saturn) === null || _window$$saturn === void 0 ? void 0 : (_window$$saturn$reset = _window$$saturn.reset) === null || _window$$saturn$reset === void 0 ? void 0 : _window$$saturn$reset.call(_window$$saturn);\n      return;\n    }\n    console.log(\"Saturn Integration Start\");\n    const userData = user;\n    // @ts-ignore\n    if ((_window2 = window) !== null && _window2 !== void 0 && _window2.$saturn && (_window3 = window) !== null && _window3 !== void 0 && (_window3$$saturn = _window3.$saturn) !== null && _window3$$saturn !== void 0 && _window3$$saturn.isLoaded) {\n      var _window4, _window4$$saturn, _window4$$saturn$rese;\n      // @ts-ignore\n      (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$$saturn = _window4.$saturn) === null || _window4$$saturn === void 0 ? void 0 : (_window4$$saturn$rese = _window4$$saturn.reset) === null || _window4$$saturn$rese === void 0 ? void 0 : _window4$$saturn$rese.call(_window4$$saturn);\n\n      // @ts-ignore\n      window.$saturn.setUser(userData === null || userData === void 0 ? void 0 : userData.uid, {\n        email: userData === null || userData === void 0 ? void 0 : userData.email,\n        name: userData === null || userData === void 0 ? void 0 : userData.name\n      });\n    } else {\n      window.addEventListener(\"saturn:ready\", function () {\n        if (userData) {\n          // @ts-ignore\n          window.$saturn.setUser(userData.uid, {\n            email: userData.email,\n            name: userData.name\n          });\n        }\n      }, {\n        once: true\n      });\n    }\n  }\n  reset() {\n    var _window5, _window6, _window6$$saturn;\n    if ((_window5 = window) !== null && _window5 !== void 0 && _window5.$saturn && (_window6 = window) !== null && _window6 !== void 0 && (_window6$$saturn = _window6.$saturn) !== null && _window6$$saturn !== void 0 && _window6$$saturn.isLoaded) {\n      var _window7, _window7$$saturn, _window7$$saturn$rese, _userData, _userData2, _userData3;\n      // @ts-ignore\n      (_window7 = window) === null || _window7 === void 0 ? void 0 : (_window7$$saturn = _window7.$saturn) === null || _window7$$saturn === void 0 ? void 0 : (_window7$$saturn$rese = _window7$$saturn.reset) === null || _window7$$saturn$rese === void 0 ? void 0 : _window7$$saturn$rese.call(_window7$$saturn);\n\n      // @ts-ignore\n      window.$saturn.setUser((_userData = userData) === null || _userData === void 0 ? void 0 : _userData.uid, {\n        email: (_userData2 = userData) === null || _userData2 === void 0 ? void 0 : _userData2.email,\n        name: (_userData3 = userData) === null || _userData3 === void 0 ? void 0 : _userData3.name\n      });\n    } else {\n      window.addEventListener(\"saturn:ready\", function () {\n        if (userData) {\n          // @ts-ignore\n          window.$saturn.setUser(userData.uid, {\n            email: userData.email,\n            name: userData.name\n          });\n        }\n      }, {\n        once: true\n      });\n    }\n  }\n}\nexport const saturnIntegration = new SaturnIntegration();","map":{"version":3,"names":["SaturnIntegration","init","user","_window2","_window3","_window3$$saturn","_window","_window$$saturn","_window$$saturn$reset","window","removeEventListener","$saturn","reset","call","console","log","userData","isLoaded","_window4","_window4$$saturn","_window4$$saturn$rese","setUser","uid","email","name","addEventListener","once","_window5","_window6","_window6$$saturn","_window7","_window7$$saturn","_window7$$saturn$rese","_userData","_userData2","_userData3","saturnIntegration"],"sources":["/Users/rohanmathur/Desktop/work/saturn-demo-app/src/integration.ts"],"sourcesContent":["class SaturnIntegration {\n  init(user: any) {\n    if (!user) {\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      window?.$saturn?.reset?.();\n      return;\n    }\n\n    console.log(\"Saturn Integration Start\");\n\n    const userData = user;\n    // @ts-ignore\n    if (window?.$saturn && window?.$saturn?.isLoaded) {\n      // @ts-ignore\n      window?.$saturn?.reset?.();\n\n      // @ts-ignore\n      window.$saturn.setUser(userData?.uid, {\n        email: userData?.email,\n        name: userData?.name,\n      });\n    } else {\n      window.addEventListener(\n        \"saturn:ready\",\n        function () {\n          if (userData) {\n            // @ts-ignore\n            window.$saturn.setUser(userData.uid, {\n              email: userData.email,\n              name: userData.name,\n            });\n          }\n        },\n        { once: true }\n      );\n    }\n  }\n\n  reset() {\n    if (window?.$saturn && window?.$saturn?.isLoaded) {\n      // @ts-ignore\n      window?.$saturn?.reset?.();\n\n      // @ts-ignore\n      window.$saturn.setUser(userData?.uid, {\n        email: userData?.email,\n        name: userData?.name,\n      });\n    } else {\n      window.addEventListener(\n        \"saturn:ready\",\n        function () {\n          if (userData) {\n            // @ts-ignore\n            window.$saturn.setUser(userData.uid, {\n              email: userData.email,\n              name: userData.name,\n            });\n          }\n        },\n        { once: true }\n      );\n    }\n  }\n}\n\nexport const saturnIntegration = new SaturnIntegration();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}