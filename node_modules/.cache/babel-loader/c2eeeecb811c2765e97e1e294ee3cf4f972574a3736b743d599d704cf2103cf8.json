{"ast":null,"code":"class SaturnIntegration {\n  init(user) {\n    var _window2, _window3, _window3$$saturn;\n    console.log(\"user data ::\", user);\n    if (!user) {\n      var _window, _window$$saturn, _window$$saturn$reset;\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      (_window = window) === null || _window === void 0 ? void 0 : (_window$$saturn = _window.$saturn) === null || _window$$saturn === void 0 ? void 0 : (_window$$saturn$reset = _window$$saturn.reset) === null || _window$$saturn$reset === void 0 ? void 0 : _window$$saturn$reset.call(_window$$saturn);\n      return;\n    }\n    console.log(\"Saturn Integration Start\");\n    const userData = user;\n    // @ts-ignore\n    if ((_window2 = window) !== null && _window2 !== void 0 && _window2.$saturn && (_window3 = window) !== null && _window3 !== void 0 && (_window3$$saturn = _window3.$saturn) !== null && _window3$$saturn !== void 0 && _window3$$saturn.isLoaded) {\n      // @ts-ignore\n      window.$saturn.setUser(userData === null || userData === void 0 ? void 0 : userData.uid, {\n        email: userData === null || userData === void 0 ? void 0 : userData.email,\n        name: userData === null || userData === void 0 ? void 0 : userData.name\n      });\n    } else {\n      window.addEventListener(\"saturn:ready\", function () {\n        if (userData) {\n          // @ts-ignore\n          window.$saturn.setUser(userData.uid, {\n            email: userData.email,\n            name: userData.name\n          });\n        }\n      }, {\n        once: true\n      });\n    }\n  }\n  reset() {\n    var _window4, _window4$$saturn, _window4$$saturn$rese;\n    // @ts-ignore\n    // if (window?.$saturn && window?.$saturn?.isLoaded) {\n    // @ts-ignore\n    (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$$saturn = _window4.$saturn) === null || _window4$$saturn === void 0 ? void 0 : (_window4$$saturn$rese = _window4$$saturn.reset) === null || _window4$$saturn$rese === void 0 ? void 0 : _window4$$saturn$rese.call(_window4$$saturn);\n    // }\n  }\n}\nexport const saturnIntegration = new SaturnIntegration();","map":{"version":3,"names":["SaturnIntegration","init","user","_window2","_window3","_window3$$saturn","console","log","_window","_window$$saturn","_window$$saturn$reset","window","removeEventListener","$saturn","reset","call","userData","isLoaded","setUser","uid","email","name","addEventListener","once","_window4","_window4$$saturn","_window4$$saturn$rese","saturnIntegration"],"sources":["/Users/rohanmathur/Desktop/work/saturn-demo-app/src/integration.ts"],"sourcesContent":["class SaturnIntegration {\n  init(user: any) {\n    console.log(\"user data ::\", user);\n    if (!user) {\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      window?.$saturn?.reset?.();\n      return;\n    }\n\n    console.log(\"Saturn Integration Start\");\n\n    const userData = user;\n    // @ts-ignore\n    if (window?.$saturn && window?.$saturn?.isLoaded) {\n      // @ts-ignore\n      window.$saturn.setUser(userData?.uid, {\n        email: userData?.email,\n        name: userData?.name,\n      });\n    } else {\n      window.addEventListener(\n        \"saturn:ready\",\n        function () {\n          if (userData) {\n            // @ts-ignore\n            window.$saturn.setUser(userData.uid, {\n              email: userData.email,\n              name: userData.name,\n            });\n          }\n        },\n        { once: true }\n      );\n    }\n  }\n\n  reset() {\n    // @ts-ignore\n    // if (window?.$saturn && window?.$saturn?.isLoaded) {\n    // @ts-ignore\n    window?.$saturn?.reset?.();\n    // }\n  }\n}\n\nexport const saturnIntegration = new SaturnIntegration();\n"],"mappings":"AAAA,MAAMA,iBAAiB,CAAC;EACtBC,IAAIA,CAACC,IAAS,EAAE;IAAA,IAAAC,QAAA,EAAAC,QAAA,EAAAC,gBAAA;IACdC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,IAAI,CAAC;IACjC,IAAI,CAACA,IAAI,EAAE;MAAA,IAAAM,OAAA,EAAAC,eAAA,EAAAC,qBAAA;MACTC,MAAM,CAACC,mBAAmB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;MACpD;MACA,CAAAJ,OAAA,GAAAG,MAAM,cAAAH,OAAA,wBAAAC,eAAA,GAAND,OAAA,CAAQK,OAAO,cAAAJ,eAAA,wBAAAC,qBAAA,GAAfD,eAAA,CAAiBK,KAAK,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAAK,IAAA,CAAAN,eAAyB,CAAC;MAC1B;IACF;IAEAH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEvC,MAAMS,QAAQ,GAAGd,IAAI;IACrB;IACA,IAAI,CAAAC,QAAA,GAAAQ,MAAM,cAAAR,QAAA,eAANA,QAAA,CAAQU,OAAO,KAAAT,QAAA,GAAIO,MAAM,cAAAP,QAAA,gBAAAC,gBAAA,GAAND,QAAA,CAAQS,OAAO,cAAAR,gBAAA,eAAfA,gBAAA,CAAiBY,QAAQ,EAAE;MAChD;MACAN,MAAM,CAACE,OAAO,CAACK,OAAO,CAACF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,GAAG,EAAE;QACpCC,KAAK,EAAEJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,KAAK;QACtBC,IAAI,EAAEL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK;MAClB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLV,MAAM,CAACW,gBAAgB,CACrB,cAAc,EACd,YAAY;QACV,IAAIN,QAAQ,EAAE;UACZ;UACAL,MAAM,CAACE,OAAO,CAACK,OAAO,CAACF,QAAQ,CAACG,GAAG,EAAE;YACnCC,KAAK,EAAEJ,QAAQ,CAACI,KAAK;YACrBC,IAAI,EAAEL,QAAQ,CAACK;UACjB,CAAC,CAAC;QACJ;MACF,CAAC,EACD;QAAEE,IAAI,EAAE;MAAK,CACf,CAAC;IACH;EACF;EAEAT,KAAKA,CAAA,EAAG;IAAA,IAAAU,QAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACN;IACA;IACA;IACA,CAAAF,QAAA,GAAAb,MAAM,cAAAa,QAAA,wBAAAC,gBAAA,GAAND,QAAA,CAAQX,OAAO,cAAAY,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBX,KAAK,cAAAY,qBAAA,uBAAtBA,qBAAA,CAAAX,IAAA,CAAAU,gBAAyB,CAAC;IAC1B;EACF;AACF;AAEA,OAAO,MAAME,iBAAiB,GAAG,IAAI3B,iBAAiB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}