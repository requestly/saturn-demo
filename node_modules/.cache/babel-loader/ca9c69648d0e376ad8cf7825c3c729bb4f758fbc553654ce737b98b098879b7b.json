{"ast":null,"code":"// @ts-nocheck\nclass SaturnIntegration {\n  init(user) {\n    console.log(\"user data ::\", user);\n    if (!user) {\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      //   window?.$saturn?.reset?.();\n      return;\n    }\n    console.log(\"Saturn Integration Start\");\n    // @ts-ignore\n    console.log(\"window\", window.$saturn);\n    const userData = user;\n\n    // @ts-ignore\n    setTimeout(() => {\n      var _window, _window2, _window2$$saturn;\n      console.log(\"calling setuser\", userData);\n      if ((_window = window) !== null && _window !== void 0 && _window.$saturn && (_window2 = window) !== null && _window2 !== void 0 && (_window2$$saturn = _window2.$saturn) !== null && _window2$$saturn !== void 0 && _window2$$saturn.isLoaded) {\n        console.log(\"calling setuser\", userData);\n        window.$saturn.isUserLoaded = false;\n        // @ts-ignore\n        window.$saturn.setUser(userData === null || userData === void 0 ? void 0 : userData.uid, {\n          email: userData === null || userData === void 0 ? void 0 : userData.email,\n          name: userData === null || userData === void 0 ? void 0 : userData.name\n        });\n      } else {\n        window.addEventListener(\"saturn:ready\", function () {\n          if (userData) {\n            // @ts-ignore\n            window.$saturn.setUser(userData.uid, {\n              email: userData.email,\n              name: userData.name\n            });\n          }\n        }, {\n          once: true\n        });\n      }\n    }, 1000);\n  }\n  reset() {\n    var _window3, _window4, _window4$$saturn;\n    // @ts-ignore\n    if ((_window3 = window) !== null && _window3 !== void 0 && _window3.$saturn && (_window4 = window) !== null && _window4 !== void 0 && (_window4$$saturn = _window4.$saturn) !== null && _window4$$saturn !== void 0 && _window4$$saturn.isLoaded) {\n      var _window5, _window5$$saturn, _window5$$saturn$rese;\n      // @ts-ignore\n      (_window5 = window) === null || _window5 === void 0 ? void 0 : (_window5$$saturn = _window5.$saturn) === null || _window5$$saturn === void 0 ? void 0 : (_window5$$saturn$rese = _window5$$saturn.reset) === null || _window5$$saturn$rese === void 0 ? void 0 : _window5$$saturn$rese.call(_window5$$saturn);\n    }\n  }\n}\nexport const saturnIntegration = new SaturnIntegration();","map":{"version":3,"names":["SaturnIntegration","init","user","console","log","window","removeEventListener","$saturn","userData","setTimeout","_window","_window2","_window2$$saturn","isLoaded","isUserLoaded","setUser","uid","email","name","addEventListener","once","reset","_window3","_window4","_window4$$saturn","_window5","_window5$$saturn","_window5$$saturn$rese","call","saturnIntegration"],"sources":["/Users/rohanmathur/Desktop/work/saturn-demo-app/src/integration.ts"],"sourcesContent":["// @ts-nocheck\nclass SaturnIntegration {\n  init(user: any) {\n    console.log(\"user data ::\", user);\n\n    if (!user) {\n      window.removeEventListener(\"saturn:ready\", () => {});\n      // @ts-ignore\n      //   window?.$saturn?.reset?.();\n      return;\n    }\n\n    console.log(\"Saturn Integration Start\");\n    // @ts-ignore\n    console.log(\"window\", window.$saturn);\n    const userData = user;\n\n    // @ts-ignore\n    setTimeout(() => {\n      console.log(\"calling setuser\", userData);\n      if (window?.$saturn && window?.$saturn?.isLoaded) {\n        console.log(\"calling setuser\", userData);\n        window.$saturn.isUserLoaded = false;\n        // @ts-ignore\n        window.$saturn.setUser(userData?.uid, {\n          email: userData?.email,\n          name: userData?.name,\n        });\n      } else {\n        window.addEventListener(\n          \"saturn:ready\",\n          function () {\n            if (userData) {\n              // @ts-ignore\n              window.$saturn.setUser(userData.uid, {\n                email: userData.email,\n                name: userData.name,\n              });\n            }\n          },\n          { once: true }\n        );\n      }\n    }, 1000);\n  }\n\n  reset() {\n    // @ts-ignore\n    if (window?.$saturn && window?.$saturn?.isLoaded) {\n      // @ts-ignore\n      window?.$saturn?.reset?.();\n    }\n  }\n}\n\nexport const saturnIntegration = new SaturnIntegration();\n"],"mappings":"AAAA;AACA,MAAMA,iBAAiB,CAAC;EACtBC,IAAIA,CAACC,IAAS,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;IAEjC,IAAI,CAACA,IAAI,EAAE;MACTG,MAAM,CAACC,mBAAmB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;MACpD;MACA;MACA;IACF;IAEAH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC;IACAD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC,MAAMC,QAAQ,GAAGN,IAAI;;IAErB;IACAO,UAAU,CAAC,MAAM;MAAA,IAAAC,OAAA,EAAAC,QAAA,EAAAC,gBAAA;MACfT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,QAAQ,CAAC;MACxC,IAAI,CAAAE,OAAA,GAAAL,MAAM,cAAAK,OAAA,eAANA,OAAA,CAAQH,OAAO,KAAAI,QAAA,GAAIN,MAAM,cAAAM,QAAA,gBAAAC,gBAAA,GAAND,QAAA,CAAQJ,OAAO,cAAAK,gBAAA,eAAfA,gBAAA,CAAiBC,QAAQ,EAAE;QAChDV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,QAAQ,CAAC;QACxCH,MAAM,CAACE,OAAO,CAACO,YAAY,GAAG,KAAK;QACnC;QACAT,MAAM,CAACE,OAAO,CAACQ,OAAO,CAACP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,GAAG,EAAE;UACpCC,KAAK,EAAET,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,KAAK;UACtBC,IAAI,EAAEV,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU;QAClB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLb,MAAM,CAACc,gBAAgB,CACrB,cAAc,EACd,YAAY;UACV,IAAIX,QAAQ,EAAE;YACZ;YACAH,MAAM,CAACE,OAAO,CAACQ,OAAO,CAACP,QAAQ,CAACQ,GAAG,EAAE;cACnCC,KAAK,EAAET,QAAQ,CAACS,KAAK;cACrBC,IAAI,EAAEV,QAAQ,CAACU;YACjB,CAAC,CAAC;UACJ;QACF,CAAC,EACD;UAAEE,IAAI,EAAE;QAAK,CACf,CAAC;MACH;IACF,CAAC,EAAE,IAAI,CAAC;EACV;EAEAC,KAAKA,CAAA,EAAG;IAAA,IAAAC,QAAA,EAAAC,QAAA,EAAAC,gBAAA;IACN;IACA,IAAI,CAAAF,QAAA,GAAAjB,MAAM,cAAAiB,QAAA,eAANA,QAAA,CAAQf,OAAO,KAAAgB,QAAA,GAAIlB,MAAM,cAAAkB,QAAA,gBAAAC,gBAAA,GAAND,QAAA,CAAQhB,OAAO,cAAAiB,gBAAA,eAAfA,gBAAA,CAAiBX,QAAQ,EAAE;MAAA,IAAAY,QAAA,EAAAC,gBAAA,EAAAC,qBAAA;MAChD;MACA,CAAAF,QAAA,GAAApB,MAAM,cAAAoB,QAAA,wBAAAC,gBAAA,GAAND,QAAA,CAAQlB,OAAO,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBL,KAAK,cAAAM,qBAAA,uBAAtBA,qBAAA,CAAAC,IAAA,CAAAF,gBAAyB,CAAC;IAC5B;EACF;AACF;AAEA,OAAO,MAAMG,iBAAiB,GAAG,IAAI7B,iBAAiB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}